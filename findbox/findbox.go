package findbox

import (
	"fmt"
	"quizz/wakeup"
)

func Findbox(c wakeup.Character) {
	fmt.Printf("–ß–µ—Ä–µ–∑ –¥–µ—è–∫–∏–π —á–∞—Å %s –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –¥–æ –±–µ–∑–ª—é–¥–Ω–æ–≥–æ —Ç–∞–±–æ—Ä—É. –í—ñ–Ω –≤–∂–µ –≤—Ç–æ–º–ª–µ–Ω–∏–π —ñ –≤–∏—Ä—ñ—à—É—î –≤—ñ–¥–ø–æ—á–∏—Ç–∏, –∞ –Ω–µ –π—Ç–∏ –¥–∞–ª—ñ. –£ –Ω–∞–π–±–ª–∏–∂—á–æ–º—É –Ω–∞–º–µ—Ç—ñ –≤—ñ–Ω –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —Å–µ–π—Ñ –∑ –∫–æ–¥–æ–≤–∏–º –∑–∞–º–∫–æ–º –∑ –æ–¥–Ω–Ω—î–π —Ü–∏—Ñ—Ä–∏.\n –í–≤–µ–¥—ñ—Ç—å 1 —Ü–∏—Ñ—Ä—É –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–µ–π—Ñ ‚û°Ô∏è ‚û°Ô∏è ‚û°Ô∏è ‚û°Ô∏è ‚û°Ô∏è \n", c.Name)

	for {
		var choice int
		_, err := fmt.Scanln(&choice)
		if err != nil {
			fmt.Println("–ü–æ–º–∏–ª–∫–∞ –≤–≤–æ–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ª–∏—à–µ —Ü–∏—Ñ—Ä—É.")
			continue
		}

		var code = 5

		if choice != code {
			if choice > code {
				fmt.Println("–ö–æ–¥ –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å. –°–ø—Ä–æ–±—É–π —â–µ. \n –ü—ñ–¥–∫–∞–∑–∫–∞: –∫–æ–¥ –º–µ–Ω—à–µ, –Ω—ñ–∂ —Ç–æ–π, —â–æ —Ç–∏ –≤–≤–æ–¥–∏—à")
				continue

			} else if choice < code {
				fmt.Println("–ö–æ–¥ –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å. –°–ø—Ä–æ–±—É–π —â–µ. \n –ü—ñ–¥–∫–∞–∑–∫–∞: –∫–æ–¥ –±—ñ–ª—å—à–∏–π, –Ω—ñ–∂ —Ç–æ–π, —â–æ —Ç–∏ –≤–≤–æ–¥–∏—à")
				continue
			}
		}
		if choice == code {
			fmt.Println("–ö–æ–¥ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å. –°–µ–π—Ñ –≤—ñ–¥–∫—Ä–∏—Ç–æ.")
			break
		}

	}
	fmt.Printf("---\n")
	fmt.Printf("–í—ñ–Ω –¥–æ–±–∏—Ä–∞—î –∫–æ–¥, —ñ –∫–æ–ª–∏ —Å–µ–π—Ñ –≤—ñ–¥—á–∏–Ω—è—î—Ç—å—Å—è, –π–æ–º—É –Ω–∞ –¥–æ–ª–æ–Ω—é –≤–∏–ø–æ–≤–∑–∞—î –≤–µ–ª–∏–∫–∞ –∫–æ–º–∞—Ö–∞, –∫—É—Å–∞—î –π–æ–≥–æ –π —Ç—ñ–∫–∞—î. %s –Ω–µ–ø—Ä–∏—Ç–æ–º–Ω—ñ—î.\n –ê –≤—Å–µ –º–æ–≥–ª–æ –±—É—Ç–∏ –∑–æ–≤—Å—ñ–º —ñ–Ω–∞–∫—à–µ.\n üîö", c.Name)
}
